@import "colors";
@import "syntax-variables";

atom-text-editor, :host {
  background-color: @syntax-background-color;
  color: @syntax-text-color;
}

atom-text-editor .gutter, :host .gutter {
  background-color: @syntax-gutter-background-color;
  color: @syntax-gutter-text-color;
}

atom-text-editor .gutter .line-number.cursor-line, :host .gutter .line-number.cursor-line {
  background-color: @syntax-gutter-background-color-selected;
  color: @syntax-gutter-text-color-selected;
}

atom-text-editor .gutter .line-number.cursor-line-no-selection, :host .gutter .line-number.cursor-line-no-selection {
  color: @syntax-gutter-text-color-selected;
}

atom-text-editor .wrap-guide, :host .wrap-guide {
  color: @syntax-wrap-guide-color;
}

atom-text-editor .indent-guide, :host .indent-guide {
  color: @syntax-indent-guide-color;
}

atom-text-editor .invisible-character, :host .invisible-character {
  color: @syntax-invisible-character-color;
}

atom-text-editor .search-results .marker .region, :host .search-results .marker .region {
  background-color: transparent;
  border: @syntax-result-marker-color;
}

atom-text-editor .search-results .marker.current-result .region, :host .search-results .marker.current-result .region {
  border: @syntax-result-marker-color-selected;
}

atom-text-editor.is-focused .cursor, :host(.is-focused) .cursor {
  border-color: @syntax-cursor-color;
}

atom-text-editor.is-focused .selection .region, :host(.is-focused) .selection .region {
  background-color: @syntax-selection-color;
}

atom-text-editor.is-focused .line-number.cursor-line-no-selection, atom-text-editor.is-focused .line.cursor-line, :host(.is-focused) .line-number.cursor-line-no-selection, :host(.is-focused) .line.cursor-line {
  background-color: @yellow-dark;
}

// Tree view Styles
atom-panel {
  .tool-panel .list-tree li {
    // Modified tree element
    &:not(.list-nested-item).selected.status-modified, &:not(.list-nested-item).selected.status-modified, &.list-nested-item.selected.status-modified > .list-item, &.list-nested-item.selected.status-modified > .list-item {
      color: @yellow-light;
    }
    &:not(.list-nested-item).status-modified, &:not(.list-nested-item).status-modified, &.list-nested-item.status-modified > .list-item, &.list-nested-item.status-modified > .list-item {
      color: @yellow-light;
    }

    // New tree element
    &:not(.list-nested-item).selected.status-added, &:not(.list-nested-item).selected.status-added, &.list-nested-item.selected.status-added > .list-item, &.list-nested-item.selected.status-added > .list-item {
      color: @green-dark;
    }

    &:not(.list-nested-item).status-added, &:not(.list-nested-item).status-added, &.list-nested-item.status-added > .list-item, &.list-nested-item.status-added > .list-item {
      color: @green-dark;
    }
  }
}


// Syntax Styles
.comment {
  color: @blue-gray-dark;
}

.string {
  color: @yellow-light;
}

.constant.numeric {
  color: @green;
}

.constant.language {
  color: @red-light;
}

.constant.character, .constant.other {
  color: @red-light;
}

.variable {}

.keyword {
  color: @green-translucent;
}

.storage {
  color: @yellow-light;
}

.storage.type {
  font-style: italic;
  color: @cyan;
}

.entity.name.class {
  text-decoration: underline;
  color: @green-dark;
}

.entity.other.inherited-class {
  font-style: italic;
  text-decoration: underline;
  color: @green-dark;
}

.entity.name.function {
  color: @green-dark;
}

.variable.parameter {
  font-style: italic;
  color: @orange-dark;
}

.entity.name.tag {
  color: @blue-gray-light;
}

.entity.other.attribute-name {
  color: @blue-gray-light;
}

.support.function {
  color: @blue;
}

.support.constant {
  color: @blue;
}

.support.type, .support.class {
  color: @blue;
}

.support.other.variable {
}

.invalid {
  color: @gray;
  background-color: @magenta;
}

.invalid.deprecated {
  color: @gray;
  background-color: @purple;
}
